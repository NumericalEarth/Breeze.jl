var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Chammas, S.; Wang, Q.; Schneider, T.; Ihme, M.; Chen, Y.-f. and Anderson, J. (2023). Accelerating Large-Eddy Simulations of Clouds With Tensor Processing Units. Journal of Advances in Modeling Earth Systems 15, e2023MS003619.\n\n\n\nStraka, J. M. (2009). Cloud and precipitation microphysics: Principles and parameterizations (Cambridge University Press).\n\n\n\n","category":"page"},{"location":"api/#API-Documentation","page":"API","title":"API Documentation","text":"","category":"section"},{"location":"api/#Breeze.Breeze","page":"API","title":"Breeze.Breeze","text":"Julia package for finite volume GPU and CPU large eddy simulations (LES) of atmospheric flows. The abstractions, design, and finite volume engine are based on Oceananigans.\n\n\n\n\n\n","category":"module"},{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/#Thermodynamics","page":"API","title":"Thermodynamics","text":"","category":"section"},{"location":"api/#Breeze.Thermodynamics.AtmosphereThermodynamics","page":"API","title":"Breeze.Thermodynamics.AtmosphereThermodynamics","text":"AtmosphereThermodynamics(FT = Oceananigans.defaults.FloatType;\n                         gravitational_acceleration = 9.81,\n                         molar_gas_constant = 8.314462618,\n                         energy_reference_temperature = 273.16,\n                         triple_point_temperature = 273.16,\n                         triple_point_pressure = 611.657,\n                         dry_air_molar_mass = 0.02897,\n                         dry_air_heat_capacity = 1005,\n                         vapor_molar_mass = 0.018015,\n                         vapor_heat_capacity = 1850,\n                         liquid = liquid_water(FT),\n                         solid = water_ice(FT),\n                         condensed_phases = nothing)\n\nCreate AtmosphereThermodynamics with parameters that represent gaseous mixture of dry \"air\" and vapor, as well as condensed liquid and solid phases. The triple_point_temperature and triple_point_pressure may be combined with  internal energy parameters for condensed phases to compute the vapor pressure at the boundary between vapor and a homogeneous sample of the condensed phase. The gravitational_acceleration parameter is included to compute reference_state quantities associated with hydrostatic balance.\n\nThe Clausius-Clapeyron relation describes the pressure-temperature relationship during phase transitions:\n\nd/dT log(pⁱ⁺) = ℒⁱ / (Rⁱ * T²)\n\nwhere:\n\npⁱ⁺ is the saturation vapor pressure for a transition between vapor and the ⁱth phase\nT is temperature\nℒⁱ is the latent heat of vaporization\nRⁱ is the specific gas constant for the ⁱth phase\n\nFor water vapor, this integrates to:\n\n    pⁱ = pᵗʳ * exp( ℒⁱ (1Tᵗʳ - 1T)  Rⁱ )\n\nwhere\n\npᵗʳ is the triple point pressure\nTᵗʳ is the triple point temperature\n\nNote: any reference values for pressure and temperature can be used in principle. The advantage of using reference values at the triple point is that the same values can then be used for both condensation (vapor → liquid) and deposition (vapor → ice).\n\n\n\n\n\n","category":"type"},{"location":"api/#Breeze.Thermodynamics.CondensedPhase","page":"API","title":"Breeze.Thermodynamics.CondensedPhase","text":"CondensedPhase(FT = Oceananigans.defaults.FloatType; latent_heat, heat_capacity)\n\nReturns CondensedPhase with specified parameters converted to FT.\n\nTwo examples of CondensedPhase are liquid and solid. When matter is converted from vapor to liquid, water molecules in the gas phase cluster together and slow down to form liquid with heat_capacity, The lost of molecular kinetic energy is called the latent_heat.\n\nLikewise, during deposition, water molecules in the gas phase cluster into ice crystals.\n\nArguments\n\nFT: Float type to use (defaults to Oceananigans.defaults.FloatType)\nlatent_heat: Difference between the internal energy of the gaseous phase at the energyreferencetemperature.\nheat_capacity: Heat capacity of the phase of matter.\n\n\n\n\n\n","category":"type"},{"location":"api/#Breeze.Thermodynamics.IdealGas","page":"API","title":"Breeze.Thermodynamics.IdealGas","text":"IdealGas{FT}\n\nA struct representing an ideal gas with molar mass and specific heat capacity.\n\nFields\n\nmolar_mass: Molar mass of the gas in kg/mol\nheat_capacity: Specific heat capacity at constant pressure in J/(kg·K)\n\nExamples\n\ndry_air = IdealGas(molar_mass=0.02897, heat_capacity=1005)\n\n# output\n\"IdealGas{Float64}(molar_mass=0.02897, heat_capacity=1005)\"\n\n\n\n\n\n","category":"type"},{"location":"api/#Breeze.Thermodynamics.mixture_gas_constant-Tuple{Any, AtmosphereThermodynamics}","page":"API","title":"Breeze.Thermodynamics.mixture_gas_constant","text":"mixture_gas_constant(q, thermo)\n\nCompute the gas constant of moist air given the specific humidity q and  thermodynamic parameters thermo.\n\nThe mixture gas constant is calculated as a weighted average of the dry air and water vapor gas constants:\n\nR_m = R_d (1 - q) + R_v q\n\nwhere:\n\nR_d is the dry air gas constant\nR_v is the water vapor gas constant  \nq is the specific humidity (mass fraction of water vapor)\n\nArguments\n\nq: Specific humidity (dimensionless)\nthermo: AtmosphereThermodynamics instance containing gas constants\n\nReturns\n\nGas constant of the moist air mixture in J/(kg·K)\n\n\n\n\n\n","category":"method"},{"location":"api/#Breeze.Thermodynamics.mixture_heat_capacity-Tuple{Any, AtmosphereThermodynamics}","page":"API","title":"Breeze.Thermodynamics.mixture_heat_capacity","text":"mixture_heat_capacity(q, thermo)\n\nCompute the heat capacity of state air given the total specific humidity q and assuming that condensate mass ratio qᶜ ≪ q, where qℓ is the mass ratio of liquid condensate.\n\n\n\n\n\n","category":"method"},{"location":"api/#MoistAirBuoyancies","page":"API","title":"MoistAirBuoyancies","text":"","category":"section"},{"location":"api/#Breeze.MoistAirBuoyancies.MoistAirBuoyancy","page":"API","title":"Breeze.MoistAirBuoyancies.MoistAirBuoyancy","text":"MoistAirBuoyancy(FT=Oceananigans.defaults.FloatType;\n                 thermodynamics = AtmosphereThermodynamics(FT),\n                 reference_constants = ReferenceStateConstants{FT}(101325, 290))\n\nReturn a MoistAirBuoyancy formulation that can be provided as input to an AtmosphereModel or an Oceananigans.NonhydrostaticModel.\n\nnote: Required tracers\nMoistAirBuoyancy requires tracers q and θ to be included in the model.\n\nExample\n\njulia> using Breeze, Oceananigans\n\njulia> buoyancy = MoistAirBuoyancy()\nMoistAirBuoyancy\n├── reference_constants: Breeze.Thermodynamics.ReferenceStateConstants{Float64}\n└── thermodynamics: AtmosphereThermodynamics\n\njulia> model = NonhydrostaticModel(; grid = RectilinearGrid(size=(8, 8, 8), extent=(1, 2, 3)),\n                                     buoyancy, tracers = (:θ, :q))\nNonhydrostaticModel{CPU, RectilinearGrid}(time = 0 seconds, iteration = 0)\n├── grid: 8×8×8 RectilinearGrid{Float64, Periodic, Periodic, Bounded} on CPU with 3×3×3 halo\n├── timestepper: RungeKutta3TimeStepper\n├── advection scheme: Centered(order=2)\n├── tracers: (θ, q)\n├── closure: Nothing\n├── buoyancy: MoistAirBuoyancy with ĝ = NegativeZDirection()\n└── coriolis: Nothing\n\n\n\n\n\n","category":"type"},{"location":"api/#AtmosphereModels","page":"API","title":"AtmosphereModels","text":"","category":"section"},{"location":"api/#Breeze.AtmosphereModels.AtmosphereModel-Tuple{Any}","page":"API","title":"Breeze.AtmosphereModels.AtmosphereModel","text":"AtmosphereModel(grid;\n                clock = Clock(grid),\n                thermodynamics = AtmosphereThermodynamics(eltype(grid)),\n                formulation = default_formulation(grid, thermodynamics),\n                absolute_humidity = DefaultValue(),\n                tracers = tuple(),\n                coriolis = nothing,\n                boundary_conditions = NamedTuple(),\n                forcing = NamedTuple(),\n                advection = WENO(order=5),\n                microphysics = WarmPhaseSaturationAdjustment(),\n                timestepper = :RungeKutta3)\n\nReturn an AtmosphereModel that uses the anelastic approximation following Pauluis (2008).\n\nExample\n\njulia> using Breeze, Breeze.AtmosphereModels, Oceananigans\n\njulia> grid = RectilinearGrid(size=(8, 8, 8), extent=(1, 2, 3));\n\njulia> model = AtmosphereModel(grid)\nAtmosphereModel{CPU, RectilinearGrid}(time = 0 seconds, iteration = 0)\n├── grid: 8×8×8 RectilinearGrid{Float64, Periodic, Periodic, Bounded} on CPU with 3×3×3 halo\n├── formulation: AnelasticFormulation(p₀=101325.0, θᵣ=288.0)\n├── timestepper: RungeKutta3TimeStepper\n├── advection scheme: WENO{3, Float64, Float32}(order=5)\n├── tracers: ()\n├── coriolis: Nothing\n└── microphysics: WarmPhaseSaturationAdjustment\n\n\n\n\n\n","category":"method"},{"location":"api/#Private-API","page":"API","title":"Private API","text":"","category":"section"},{"location":"api/#Thermodynamics-2","page":"API","title":"Thermodynamics","text":"","category":"section"},{"location":"api/#Breeze.Thermodynamics.reference_density-Tuple{Any, Any, Any}","page":"API","title":"Breeze.Thermodynamics.reference_density","text":"reference_density(z, ref, thermo)\n\nCompute the reference density associated with the reference pressure and potential temperature. The reference density is defined as the density of dry air at the reference pressure and temperature.\n\n\n\n\n\n","category":"method"},{"location":"api/#Breeze.Thermodynamics.reference_density-Tuple{Any, ReferenceStateConstants, Any}","page":"API","title":"Breeze.Thermodynamics.reference_density","text":"reference_density(ref, thermo)\n\nCompute the reference density associated with the reference pressure and potential temperature. The reference density is defined as the density of dry air at the reference pressure and temperature.\n\n\n\n\n\n","category":"method"},{"location":"api/#Breeze.Thermodynamics.saturation_vapor_pressure-Tuple{Any, Any, CondensedPhase}","page":"API","title":"Breeze.Thermodynamics.saturation_vapor_pressure","text":"saturation_vapor_pressure(T, thermo)\n\nCompute the Saturation vapor pressure over a liquid surface by integrating the Clausius-Clapeyron relation,\n\ndpdT = ℒᵛ  (Rᵛ T^2)\n\nwhich integrates to the expression\n\np(T) = pᵗʳ left(fracTTᵗʳright)^aᵛ expleft(bᵛ (1Tᵗʳ - 1T)right)\n\n\n\n\n\n","category":"method"},{"location":"api/#MoistAirBuoyancies-2","page":"API","title":"MoistAirBuoyancies","text":"","category":"section"},{"location":"api/#AtmosphereModels-2","page":"API","title":"AtmosphereModels","text":"","category":"section"},{"location":"api/#Breeze.AtmosphereModels._pressure_correct_momentum!-Tuple{Any}","page":"API","title":"Breeze.AtmosphereModels._pressure_correct_momentum!","text":"Update the predictor momentum (ρu, ρv, ρw) with the non-hydrostatic pressure via\n\nu^{n+1} = u^n - δₓp_{NH} / Δx * Δt\n\n\n\n\n\n","category":"method"},{"location":"api/#Oceananigans.TimeSteppers.compute_flux_bc_tendencies!-Tuple{AtmosphereModel}","page":"API","title":"Oceananigans.TimeSteppers.compute_flux_bc_tendencies!","text":"Apply boundary conditions by adding flux divergences to the right-hand-side. \n\n\n\n\n\n","category":"method"},{"location":"thermodynamics/#Atmosphere-Thermodynamics","page":"Thermodynamics","title":"Atmosphere Thermodynamics","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Breeze implements thermodynamic relations for moist atmospheres –- fluids that can be described as a binary mixture of (i) \"dry\" air, and (ii) vapor, as well as liquid and solid condensates of the vapor component of various shapes and sizes.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"On Earth, dry air is itself a mixture of gases, the vapor component is mathrmH_2 O, and the condensates comprise clouds and precipitation such as rain, snow, hail, and grapuel. Breeze models dry air as having a fixed composition with constant molar mass. Dry air on Earth's is mostly nitrogen, oxygen, and argon.","category":"page"},{"location":"thermodynamics/#Two-laws-for-ideal-gases","page":"Thermodynamics","title":"Two laws for ideal gases","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Both dry air and vapor are modeled as ideal gases, which means that the ideal gas law relates pressure p, temperature T, and density ρ,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"p = ρ R T ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Above, R = ℛ  m is the specific gas constant given the molar gas constant ℛ  831 J  K  mathrmmol and molar mass m of the gas species under consideration.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"The first law of thermodynamics, aka \"conservation of energy\", states that infinitesimal changes in internal energy mathrmd e are related to infinestimal changes in temperature mathrmd T and pressure mathrmd p according to","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"mathrmd e = cᵖ mathrmd T - fracmathrmd prho","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where cᵖ is the specific heat capacity of the gas in question.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"For example, to represent dry air typical for Earth, with molar mass m = 0029 and heat capacity c^p = 1005, we write","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"using Breeze.Thermodynamics: IdealGas\ndry_air = IdealGas(molar_mass=0.029, heat_capacity=1005)","category":"page"},{"location":"thermodynamics/#Adiabatic-transformations-and-potential-temperature,-θ","page":"Thermodynamics","title":"Adiabatic transformations and potential temperature, θ","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Within adiabatic transformations, mathrmd e = 0. Combining the ideal gas law with conservation of energy then yields","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"fracmathrmd pmathrmd T = ρ cᵖ = fracpR T cᵖ qquad textwhich implies qquad T  left ( fracpp₀ right )^R  cᵖ ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where p₀ is some reference pressure. As a result, the potential temperature","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"θ  T left ( fracp₀p right )^Rᵈ  cᵖ  fracTΠ quad where quad Π  left ( fracpp₀ right )^Rᵈ  cᵖ ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"is constant under adiabatic transformations, defined such that θ(z=0) = T(z=0).","category":"page"},{"location":"thermodynamics/#Hydrostatic-balance","page":"Thermodynamics","title":"Hydrostatic balance","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Next we consider a reference state with constant internal energy and thus constant potential temperature","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"θ₀ = Tᵣ left ( fracp₀pᵣ right )^Rᵈ  cᵖ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"note: About subscripts\nSubscripts 0 typically indicate evaluated values. For example, in the above formula, p₀  pᵣ(z=0). Subscripts r indicate reference states, which typically are functions of z. This differs from the usual notation in which the subscripts 0 indicate \"reference\" and \"00\" means z=0.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Hydrostatic balance requires","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"_z pᵣ = - ρᵣ g","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"we get","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"fracpᵣp₀ = left (1 - fracg zcᵖ θ₀ right )^cᵖ  Rᵈ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Thus","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Tᵣ(z) = θ₀ left ( fracpᵣp₀ right )^Rᵈ  cᵖ = θ₀ left ( 1 - fracg zcᵖ θ₀ right )","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"and","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"ρᵣ(z) = fracp₀R θ₀ left ( 1 - fracg zcᵖ θ₀ right )^cᵖ  Rᵈ - 1","category":"page"},{"location":"thermodynamics/#An-example-of-a-dry-reference-state-in-Breeze","page":"Thermodynamics","title":"An example of a dry reference state in Breeze","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"We can visualise a hydrostatic reference profile evaluating Breeze's reference-state utilities (which assume a dry reference state) on a one-dimensional RectilinearGrid:","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"using Breeze\nusing Breeze.Thermodynamics: reference_pressure, reference_density\nusing CairoMakie\n\nthermo = AtmosphereThermodynamics()\nconstants = ReferenceStateConstants(base_pressure=101325, potential_temperature=288)\ngrid = RectilinearGrid(size=160, z=(1, 12_000), topology=(Flat, Flat, Bounded))\n\npᵣ = CenterField(grid)\nρᵣ = CenterField(grid)\n\nset!(pᵣ, z -> reference_pressure(z, constants, thermo))\nset!(ρᵣ, z -> reference_density(z, constants, thermo))\n\nRᵈ = Breeze.Thermodynamics.dry_air_gas_constant(thermo)\ncᵖᵈ = thermo.dry_air.heat_capacity\np₀ = constants.base_pressure\nθ₀ = constants.reference_potential_temperature\ng = thermo.gravitational_acceleration\n\n# Verify that Tᵣ = θ₀ (1 - g z / (cᵖᵈ θ₀))\nz = KernelFunctionOperation{Center, Center, Center}(znode, grid, Center(), Center(), Center())\nTᵣ₁ = Field(θ₀ * (pᵣ / p₀)^(Rᵈ / cᵖᵈ))\nTᵣ₂ = Field(θ₀ * (1 - g * z / (cᵖᵈ * θ₀)))\n\nfig = Figure(resolution = (900, 300))\naxT = Axis(fig[1, 1]; xlabel = \"Temperature (ᵒK)\", ylabel = \"Height (m)\")\nlines!(axT, Tᵣ₁)\nlines!(axT, Tᵣ₂)\n\naxp = Axis(fig[1, 2]; xlabel = \"Pressure (Pa)\", ylabel = \"\")\nlines!(axp, pᵣ)\n\naxρ = Axis(fig[1, 3]; xlabel = \"Density (kg m⁻³)\", ylabel = \"\")\nlines!(axρ, ρᵣ)\n\nfig","category":"page"},{"location":"thermodynamics/#Thermodynamic-relations-for-gaseous-mixtures","page":"Thermodynamics","title":"Thermodynamic relations for gaseous mixtures","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"\"Moist air\" is conceived to be a mixture of two gas phases: \"dry air\" (itself a mixture of gases) and water vapor, as well as a collection of liquid droplet and solid ice particle \"condensates\". We assume that the volume of the condensates is negligible, such that the total pressure is the sum of partial pressures of vapor and dry air,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"p = pᵈ + pᵛ ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"The partial pressure of the dry air and vapor components are related to the component densities ρᵈ and ρᵛ through the ideal gas law,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"pᵈ = ρᵈ Rᵈ T qquad textand qquad pᵛ = ρᵛ Rᵛ T","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where T is temperature, Rⁱ = ℛ  m^β is the specific gas constant for component β, ℛ  is the molar or \"universal\" gas constant, and m^β is the molar mass of component β.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Central to Breeze's implementation of moist thermodynamics is a struct that holds parameters like the molar gas constant and molar masses,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"thermo = AtmosphereThermodynamics()","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"The default parameter evince basic facts about water vapor air typical to Earth's atmosphere: for example, the molar masses of dry air (itself a mixture of mostly nitrogen, oxygen, and argon), and water vapor are mᵈ = 0029 kg/mol and mᵛ = 0018 kg/mol.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"To write the effective gas law for moist air, we introduce the mass ratios","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"qᵈ equiv fracρᵈρ qquad textand qquad qᵛ equiv fracρᵛρ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where ρ is total density of the fluid including dry air, vapor, and condensates, ρᵈ is the density of dry air, and ρᵛ is the density of vapor. It's then convenient to introduce the \"mixture\" gas constant Rᵐ(qᵛ) such that","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"p = ρ Rᵐ T qquad mathrmwhere qquad Rᵐ  qᵈ Rᵈ + qᵛ Rᵛ ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"In \"clear\" (not cloudy) air, we have that qᵈ = 1 - qᵛ. More generally, qᵈ = 1 - qᵛ - qᶜ, where qᶜ is the total mass ratio of condensed species. In most situations on Earth, qᶜ  qᵛ.","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"# Compute mixture properties for air with 0.01 specific humidity\nqᵛ = 0.01 # 1% water vapor by mass\nRᵐ = mixture_gas_constant(qᵛ, thermo)","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"We likewise define a mixture heat capacity via cᵖᵐ = qᵈ cᵖᵈ + qᵛ cᵖᵛ,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"q = 0.01 # 1% water vapor by mass\ncᵖᵐ = mixture_heat_capacity(qᵛ, thermo)","category":"page"},{"location":"thermodynamics/#The-Clausius-Claperyon-relation-and-saturation-specific-humidity","page":"Thermodynamics","title":"The Clausius-Claperyon relation and saturation specific humidity","text":"","category":"section"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"The Clausius-Claperyon relation for an ideal gas","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"fracmathrmd pᵛmathrmd T = fracpᵛ ℒ^β(T)Rᵛ T^2","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where pᵛ is saturation vapor pressure, T is temperature, Rᵛ is the specific gas constant for vapor, ℒ^β(T) is the latent heat of the transition from vapor to the β phase (e.g. l  β for vapor → liquid and i  β for vapor to ice).","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"For a thermodynamic formulation that uses constant (i.e. temperature-independent) specific heats, the latent heat of a phase transition is linear in temperature. For example, for phase change from vapor to liquid,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"ℒˡ(T) = ℒˡ₀ + big ( underbracecᵖᵛ - cᵖˡ_Δcˡ big ) T","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"where ℒˡ₀ is the latent heat at T = 0, with T in Kelvin. Integrate that to get","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"pᵛ(T) = pᵗʳ left ( fracTTᵗʳ right )^Δcˡ  Rᵛ exp left  fracℒˡ₀Rᵛ left (frac1Tᵗʳ - frac1T right ) right ","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"Consider parameters for liquid water,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"using Breeze.Thermodynamics: CondensedPhase\nliquid_water = CondensedPhase(latent_heat=2500800, heat_capacity=4181)","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"or water ice,","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"water_ice = CondensedPhase(latent_heat=2834000, heat_capacity=2108)","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"The saturation specific humidity is","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"qᵛ  fracρᵛρ = fracpᵛRᵐ T","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"This is what it looks like:","category":"page"},{"location":"thermodynamics/","page":"Thermodynamics","title":"Thermodynamics","text":"using Breeze\nusing Breeze.MoistAirBuoyancies: saturation_specific_humidity\nusing CairoMakie\n\nthermo = AtmosphereThermodynamics()\nref = ReferenceStateConstants(base_pressure=101325, potential_temperature=288)\n\nz = 0\nT = collect(273.2:0.1:313.2)\nqᵛ⁺ = [saturation_specific_humidity(Tⁱ, z, ref, thermo, thermo.liquid) for Tⁱ in T]\n\nfig = Figure()\nax = Axis(fig[1, 1], xlabel=\"Temperature (ᵒK)\", ylabel=\"Saturation specific humidity qᵛ⁺ (kg kg⁻¹)\")\nlines!(ax, T, qᵛ⁺)\nfig","category":"page"},{"location":"microphysics/saturation_adjustment/#Warm-phase-saturation-adjustment","page":"Warm phase saturation adjustment","title":"Warm-phase saturation adjustment","text":"","category":"section"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"Warm-phase saturation adjustment is a model for water droplet nucleation that assumes that water vapor in excess of the saturation specific humidity is instantaneously converted to liquid water. Mixed-phase saturation adjustment is described by Chammas et al. (2023). Saturation adjustment may be formulated as a nonlinear algebraic equation that relates temperature, potential temperature, and total specific humidity, derived from the definition of liquid potential temperature,","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"θ = fracTΠ left 1 - fracℒᵥ₀cᵖᵐ T max left 0 qᵗ - qᵛ(T) right  right  ","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"where Π is the Exner function, θ is potential temperature, T is temperature, ℒᵥ₀ is the reference latent heat of vaporization, qᵗ is the total specific humidity, qᵛ is the saturation specific humidity, and cᵖᵐ is the moist air specific heat. The condensate specific humidity is qˡ = max(0 qᵗ - qᵛ): qˡ = 0 if the air is undersaturated with qᵗ  qᵛ. Both Π and cᵖᵐ depend on the dry and vapor mass fractions qᵈ = 1 - qᵗ and qᵛ = qᵗ - qˡ, and qᵛ is an increasing function of temperature T. Rewriting the potential temperature relation, saturation adjustment requires solving r(T) = 0,","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"r(T) = T - θ Π - fracℒᵥ₀cᵖᵐ max0 qᵗ - qᵛ(T) ","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"We use a secant method after checking for θ = 0 and qˡ = 0 given the guess T₁ = θ Π(qᵗ). If qᵗ  qᵛ(T₁), then we are guaranteed that T  T₁ because qᵛ is an increasing function of T. We initialize the secant iteration with a second guess T₂ = θ Π - qᵗ - qᵛ(T₁) ℒᵥ₀  cᵖᵐ.","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"As an example, we consider an air parcel at sea-level and with potential temperature of θ = 290ᵒK, within a reference state with base pressure of 101325 Pa and a reference potential temperature 288ᵒK. The saturation specific humidity is then","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"using Breeze\nusing Breeze.MoistAirBuoyancies: saturation_specific_humidity, HeightReferenceThermodynamicState\n\nthermo = AtmosphereThermodynamics()\nref = ReferenceStateConstants(base_pressure=101325, potential_temperature=288)\n\nz = 0.0    # [m] height\nθ = 290.0  # [ᵒK] potential temperature\nqᵛ⁺₀ = saturation_specific_humidity(θ, z, ref, thermo, thermo.liquid)","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"Recall that the specific humidity is unitless, or has units \"kg  kg\": kg of water vapor per total kg of air. We then perform a non-trivial saturation adjustment by computing temperature given a total specific humidity slightly above saturation:","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"using Breeze.MoistAirBuoyancies: temperature\n\nqᵗ = 0.012   # [kg kg⁻¹] total specific humidity\nU = HeightReferenceThermodynamicState(θ, qᵗ, z)\nT = temperature(U, ref, thermo)","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"Finally, we recover the amount of liquid condensate by subtracting the saturation specific humidity from the total:","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"qᵛ⁺ = saturation_specific_humidity(T, z, ref, thermo, thermo.liquid)\nqˡ = qᵗ - qᵛ⁺","category":"page"},{"location":"microphysics/saturation_adjustment/#Saturation-adjustment-with-varying-total-specific-humidity","page":"Warm phase saturation adjustment","title":"Saturation adjustment with varying total specific humidity","text":"","category":"section"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"As a second example, we examine the dependence of temperature on total specific humidity when the potential temperature is constant:","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"qᵗ = 0:1e-4:0.02 # [kg kg⁻¹] total specific humidity\nU = [HeightReferenceThermodynamicState(θ, qᵗⁱ, z) for qᵗⁱ in qᵗ]\nT = [temperature(Uⁱ, ref, thermo) for Uⁱ in U]\n\n## Compare with a simple piecewise linear model\nℒᵥ₀ = thermo.liquid.latent_heat\ncᵖᵈ = thermo.dry_air.heat_capacity\nT̃ = [290 + ℒᵥ₀ / cᵖᵈ * max(0, qᵗⁱ - qᵛ⁺₀) for qᵗⁱ in qᵗ]\n\nusing CairoMakie\n\nfig = Figure()\nax = Axis(fig[1, 1], xlabel=\"Total specific humidity (kg kg⁻¹)\", ylabel=\"Temperature (ᵒK)\")\nlines!(ax, qᵗ, T, label=\"Temperature from saturation adjustment\")\nlines!(ax, qᵗ, T̃, label=\"Temperature from linearized formula\")\naxislegend(ax)\nfig","category":"page"},{"location":"microphysics/saturation_adjustment/#Saturation-adjustment-with-varying-height","page":"Warm phase saturation adjustment","title":"Saturation adjustment with varying height","text":"","category":"section"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"For a third example, we consider a state with constant potential temperature and total specific humidity, but at varying heights:","category":"page"},{"location":"microphysics/saturation_adjustment/","page":"Warm phase saturation adjustment","title":"Warm phase saturation adjustment","text":"qᵗ = 0.005\nz = 0:100:10e3\nT = [temperature(HeightReferenceThermodynamicState(θ, qᵗ, zᵏ), ref, thermo) for zᵏ in z]\nqᵛ⁺ = [saturation_specific_humidity(T[k], z[k], ref, thermo, thermo.liquid) for k = 1:length(z)]\nqˡ = [max(0, qᵗ - qᵛ⁺ᵏ) for qᵛ⁺ᵏ in qᵛ⁺]\n\nfig = Figure()\n\nyticks = 0:2e3:10e3\naxT = Axis(fig[1, 1]; xlabel=\"Temperature (ᵒK)\", ylabel=\"Height (m)\", yticks)\naxq⁺ = Axis(fig[1, 2]; xlabel=\"Saturation \\n specific humidity \\n (kg kg⁻¹)\",\n                       yticks, yticklabelsvisible=false)\naxqˡ = Axis(fig[1, 3]; xlabel=\"Liquid \\n specific humidity \\n (kg kg⁻¹)\",\n                       yticks, yticklabelsvisible=false)\n\nlines!(axT, T, z)\nlines!(axq⁺, qᵛ⁺, z)\nlines!(axqˡ, qˡ, z)\n\nfig","category":"page"},{"location":"microphysics/microphysics_overview/#Microphysics","page":"Overview","title":"Microphysics","text":"","category":"section"},{"location":"microphysics/microphysics_overview/","page":"Overview","title":"Overview","text":"In atmospheric modeling, \"microphysics\" largely overlaps with \"cloud physics\" and concerns the formation, development, and precipitation of clouds. More generally, \"microphysics\" encompasses panoply of physical processes associated with (i) the conversion of water between vapor, liquid, and ice phases, and (ii) the interaction and transformation of \"cloud particles\", which include droplets, ice particles, and aerosols. For example: microphysical processes include droplet nucleation on aerosol particles; liquid freezing and vapor solidification; chemical and humidity-based transformations of aerosol particles; the agglomeration of ice particles into snowflakes; collisions and breakup of falling droplets (rain); collision between ice particles and droplets or wholesale freezing of droplets to form hail (e.g. Straka (2009)).","category":"page"},{"location":"microphysics/microphysics_overview/","page":"Overview","title":"Overview","text":"Breeze microphysics is nascent and under active development. Breeze aims to eventually provide a wide range of microphysical models, ranging from simple warm-phase saturation adjustment, to the bulk schemes provided by the Climate Modeling Alliance's CloudMicrophysics.jl, to superdroplet schemes, to spectral bin schemes that include a spectrum of droplet sizes, ice particle shapes and aerosol types.","category":"page"},{"location":"#Breeze.jl","page":"Home","title":"Breeze.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Fast, friendly atmosphere simulations on CPUs and GPUs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Breeze provides software for flexible software package for finite-volume atmosphere simulations on CPUs and GPUs, based on Oceananigans. Like Oceananigans, it provides a radically productive user interface that makes simple simulations easy, and complex, creative simulations possible.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Breeze provides two ways to simulate moist atmospheres:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A MoistAirBuoyancy that can be used with Oceananigans' NonhydrostaticModel to simulate atmospheric flows with the Boussinesq approximation.\nA prototype AtmosphereModel that uses the anelastic approximation following Pauluis (2008).","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To use Breeze, install directly from GitHub:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"https://github.com/NumericalEarth/Breeze.jl.git\")","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A basic free convection simulation:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Oceananigans\nusing Oceananigans.Units\nusing CairoMakie\nusing Breeze\n\nNx = Nz = 64\nLz = 4 * 1024\ngrid = RectilinearGrid(CPU(), size=(Nx, Nz), x=(0, 2Lz), z=(0, Lz), topology=(Periodic, Flat, Bounded))\n\nreference_constants = Breeze.Thermodynamics.ReferenceStateConstants(base_pressure=1e5, potential_temperature=288)\nbuoyancy = Breeze.MoistAirBuoyancy(; reference_constants)\n\nQ₀ = 1000 # heat flux in W / m²\nρ₀ = Breeze.MoistAirBuoyancies.base_density(buoyancy) # air density at z=0\ncₚ = buoyancy.thermodynamics.dry_air.heat_capacity\nθ_bcs = FieldBoundaryConditions(bottom=FluxBoundaryCondition(Q₀ / (ρ₀ * cₚ)))\nq_bcs = FieldBoundaryConditions(bottom=FluxBoundaryCondition(1e-2))\n\nadvection = WENO()\ntracers = (:θ, :q)\nmodel = NonhydrostaticModel(; grid, advection, buoyancy,\n                            tracers = (:θ, :q),\n                            boundary_conditions = (θ=θ_bcs, q=q_bcs))\n\nΔθ = 2 # ᵒK\nTₛ = reference_constants.reference_potential_temperature # K\nθᵢ(x, z) = Tₛ + Δθ * z / grid.Lz + 1e-2 * Δθ * randn()\nqᵢ(x, z) = 0 # 1e-2 + 1e-5 * rand()\nset!(model, θ=θᵢ, q=qᵢ)\n\nsimulation = Simulation(model, Δt=10, stop_time=2hours)\nconjure_time_step_wizard!(simulation, cfl=0.7)\n\nrun!(simulation)\n\nT = Breeze.TemperatureField(model)\nheatmap(T)","category":"page"}]
}
